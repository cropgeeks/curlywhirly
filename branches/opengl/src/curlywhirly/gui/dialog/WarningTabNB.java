// Copyright 2009-2014 Information & Computational Sciences, JHI. All rights
// reserved. Use is subject to the accompanying licence terms.

package curlywhirly.gui.dialog;

import javax.swing.*;

import curlywhirly.gui.*;

import scri.commons.gui.*;

class WarningTabNB extends JPanel
{
	public WarningTabNB()
    {
        initComponents();

		GUIUtils.setPanelColor(this, false);
		GUIUtils.setPanelColor(panel, false);

		panel.setBorder(BorderFactory.createTitledBorder(RB.getString("gui.dialog.NBWarningPanel.panelTitle")));

		RB.setText(warnOnClose, "gui.dialog.NBWarningPanel.warnOnClose");
		RB.setText(warnOnExit, "gui.dialog.NBWarningPanel.warnOnExit");

		warnOnClose.setSelected(Prefs.guiWarnOnClose);
		warnOnExit.setSelected(Prefs.guiWarnOnExit);
    }

	public void applySettings()
	{
		Prefs.guiWarnOnClose = warnOnClose.isSelected();
		Prefs.guiWarnOnExit = warnOnExit.isSelected();
	}


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        panel = new javax.swing.JPanel();
        warnOnClose = new javax.swing.JCheckBox();
        warnOnExit = new javax.swing.JCheckBox();

        panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Inform me:"));

        warnOnClose.setText("Before closing a dataset if a file is already in memory");

        warnOnExit.setText("Before exiting CurlyWhirly if a file is still in memory");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(warnOnClose)
                    .addComponent(warnOnExit))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(warnOnClose)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warnOnExit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panel;
    private javax.swing.JCheckBox warnOnClose;
    private javax.swing.JCheckBox warnOnExit;
    // End of variables declaration//GEN-END:variables
}