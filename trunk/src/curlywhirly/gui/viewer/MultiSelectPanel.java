package curlywhirly.gui.viewer;

import java.awt.*;
import java.awt.event.*;
import java.awt.image.*;
import javax.swing.*;
import javax.swing.event.*;

import curlywhirly.gui.*;
import curlywhirly.gui.viewer.opengl.*;

import scri.commons.gui.*;

public class MultiSelectPanel extends JPanel implements ActionListener, ChangeListener
{
	private final OpenGLPanel glPanel;

	private DefaultComboBoxModel<String> selectionTypeModel;

	public static final int SELECT = 0;
	public static final int DESELECT = 1;
	public static final int TOGGLE = 2;

    public MultiSelectPanel(OpenGLPanel glPanel)
	{
        initComponents();

		this.glPanel = glPanel;

		setupComponents();
    }

	private void setupComponents()
	{
		setupLabel();
		setupSlider();
		setupComboBox();

		RB.setText(bDone, "gui.viewer.MultiSelectPanel.bDone");
		bDone.addActionListener(this);
		RB.setText(bCancel, "gui.text.cancel");
		bCancel.addActionListener(this);

		setVisible(false);
	}

	private void setupComboBox()
	{
		selectionTypeModel = new DefaultComboBoxModel<String>();
		selectionTypeModel.insertElementAt(RB.getString("gui.viewer.MultiSelectPanel.selectionTypeModel.select"), SELECT);
		selectionTypeModel.insertElementAt(RB.getString("gui.viewer.MultiSelectPanel.selectionTypeModel.deselect"), DESELECT);
		selectionTypeModel.insertElementAt(RB.getString("gui.viewer.MultiSelectPanel.selectionTypeModel.toggle"), TOGGLE);
		selectionTypeCombo.setModel(selectionTypeModel);
		selectionTypeCombo.setSelectedIndex(0);
		selectionTypeCombo.addActionListener(this);
	}

	private void setupLabel()
	{
		setLabelIcon();
		selectionColourLabel.addMouseListener(new MouseInputAdapter()
		{
			@Override
			public void mouseClicked(MouseEvent e)
			{
				if (e.getSource() == selectionColourLabel && e.getClickCount() == 2)
				{
					Color colour = JColorChooser.showDialog(CurlyWhirly.winMain,
						RB.getString("gui.viewer.MultiSelectPanel.ColourChooser.title"),
						ColorPrefs.get("User.OpenGLPanel.multiSelectColor"));

					ColorPrefs.setColor("User.OpenGLPanel.multiSelectColor", colour);
					// We need to update the label icon so the new colour is displayed
					setLabelIcon();
				}
			}
		});
	}

	private void setLabelIcon()
	{
		Color color = ColorPrefs.get("User.OpenGLPanel.multiSelectColor");

		// Set the icon
		BufferedImage image = new BufferedImage(20, 10, BufferedImage.TYPE_INT_RGB);
		Graphics2D g = image.createGraphics();

		GradientPaint paint = new GradientPaint(0, 0, color.brighter(), 20, 10, color.darker());
		g.setPaint(paint);
		g.fillRect(0, 0, 20, 10);
		g.setColor(Color.BLACK);
		g.drawRect(0, 0, 20, 10);
		g.dispose();

		selectionColourLabel.setIcon(new ImageIcon(image));
	}

	private void setupSlider()
	{
		selectionSlider.setValue(2);
		selectionSlider.addChangeListener(this);
	}

	@Override
	public void setVisible(boolean visible)
	{
		selectionSlider.setValue(2);
		super.setVisible(visible);
		if (glPanel.getScene() != null)
			glPanel.getScene().detectMultiSelectedPoints();
	}

	@Override
	public void actionPerformed(ActionEvent e)
	{
		if (e.getSource() == bDone)
		{
			setVisible(false);
			glPanel.getScene().finishedMultiSelect(selectionTypeCombo.getSelectedIndex());
		}

		else if (e.getSource() == bCancel)
		{
			glPanel.getScene().cancelMultiSelect();
		}
	}

	@Override
	public void stateChanged(ChangeEvent e)
	{
		if (e.getSource() == selectionSlider)
		{
			glPanel.getScene().setSelectPointSize(selectionSlider.getValue());
			glPanel.getScene().detectMultiSelectedPoints();
		}
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        selectionColourLabel = new javax.swing.JLabel();
        selectionSlider = new javax.swing.JSlider();
        bDone = new javax.swing.JButton();
        selectionTypeCombo = new javax.swing.JComboBox<String>();
        actionLabel = new javax.swing.JLabel();
        bCancel = new javax.swing.JButton();

        selectionColourLabel.setText("Selected colour");

        bDone.setText("Done");

        actionLabel.setLabelFor(selectionTypeCombo);
        actionLabel.setText("Action:");

        bCancel.setText("Cancel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectionColourLabel)
                .addGap(18, 18, 18)
                .addComponent(selectionSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(actionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectionTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bDone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bCancel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(selectionColourLabel))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(selectionSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selectionTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bDone)
                            .addComponent(actionLabel)
                            .addComponent(bCancel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel actionLabel;
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bDone;
    private javax.swing.JLabel selectionColourLabel;
    private javax.swing.JSlider selectionSlider;
    private javax.swing.JComboBox<String> selectionTypeCombo;
    // End of variables declaration//GEN-END:variables

}
